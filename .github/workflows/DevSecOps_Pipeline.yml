name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - master

permissions:
  contents: write
  issues: write 
  security-events: write

jobs:
  build:
    name: Build Juice Shop App
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Pull Juice Shop Docker Image
        run: docker pull bkimminich/juice-shop

  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # SAST: CodeQL Security Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-extended
          config: |
            paths-ignore:
              - 'data/static/codefixes'
              
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"
          output: "codeql-analysis-results"
          
      - name: Upload CodeQL scan results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: codeql-scan-results
          path: codeql-analysis-results.sarif

      # SCA: Snyk Vulnerability Scanning
      - uses: actions/checkout@master
      - name: Install the dependencies
        run: npm install

      - name: Create sarif files directory
        run: mkdir -p sarif-files
        
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk-results.sarif

      - name: Upload Snyk scan result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-results.sarif
          
      - name: Upload Snyk scan results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: snyk-scan-results
          path: snyk-results.sarif

      # DAST: OWASP ZAP Scan
      - name: Start Juice Shop Container
        run: |
          docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done' || false
      
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -d -x dast-scan-results.xml -I'
          
      - name: Upload zap results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: zap-scan-results
          path: dast-scan-results.xml

  vulnerability_management:
    name: Vulnerability Management
    needs: security_testing
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download CodeQL Results
        uses: actions/download-artifact@v4
        with:
          name: codeql-scan-results
          path: analysis-results/codeql

      - name: Download Snyk Results
        uses: actions/download-artifact@v4
        with:
          name: snyk-scan-results
          path: analysis-results/snyk

      - name: Download ZAP Results
        uses: actions/download-artifact@v4
        with:
          name: zap-scan-results
          path: analysis-results/zap

      - name: Combine Sarif Files
        run: |
          mkdir -p reports
          jq -s '
            reduce .[] as $item ({}; 
              .results += $item.results
            )
          ' analysis-results/codeql/*.sarif scan-results/snyk/*.sarif > reports/combined-results.sarif
    
      - name: SonarCloud DAST Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.zaproxy.reportPath=analysis-results/zap/dast-scan-results.xml

      - name: SonarCloud SAST & SCA Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sarifReportPaths=reports/combined-results.sarif

      - name: Scan Results Summary
        if: always()
        run: |
          echo "Scan Results Summary"
          echo "===================="
          echo "Results uploaded to SonarCloud"
          echo "Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
          echo "Final Files Structure:"
          ls -R analysis-results/

  # redeploy:
  #     name: Redeploy Juice Shop App
  #     runs-on: ubuntu-latest
  #     needs: vulnerability_management
  #     if: success()
  
  #     steps:
  #       - name: Pull the latest Juice Shop docker image
  #         run: docker pull bkimminich/juice-shop
  
  #       - name: Deploy & Verify Juice Shop App working
  #         run: |
  #           docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop
  #           timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done' || false
